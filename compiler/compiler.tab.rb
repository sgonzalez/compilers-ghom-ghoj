#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require './compiler.rex.rb'
  require './reflectivevisitor.rb'

  $ast = AbstractNode.new(:root)
class CompilerLanguage < Racc::Parser

module_eval(<<'...end compiler.y/module_eval...', 'compiler.y', 37)

  def parse(input)
    scan_str(input)
  end

  def on_error(error_token_id, error_value, value_stack)
		token_name = token_to_str(error_token_id)
		token_name.downcase!
		token = error_value.to_s.inspect

		str = 'parse error on '
		str << token_name << ' ' unless token_name == token
		str << token
	end


...end compiler.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    26,    26,    26,    26,    26,    34,    29,    29,    29,    29,
    29,    22,   -31,   -34,   -32,    55,    37,    33,    22,    19,
   -31,   -34,   -32,    21,    27,    27,    27,    27,    27,    30,
    21,    38,    39,    40,    41,    42,    43,    44,    45,    46,
    47,    48,    49,     4,    17,     6,    16,     7,    52,    10,
    12,     4,    53,     6,    15,     7,    23,    10,    12,     4,
   -11,     6,    57,     7,    58,    10,    12,     4,    31,     6,
    60,     7,    13,    10,    12,    61,    12,    63,    64,    24,
    66 ]

racc_action_check = [
    16,    29,    53,    50,    23,    20,    16,    29,    53,    50,
    23,    11,    26,    57,    27,    36,    25,    20,    35,     9,
    26,    57,    27,    11,    16,    29,    53,    50,    23,    17,
    35,    28,    28,    28,    28,    28,    28,    28,    28,    28,
    28,    28,    28,     0,     7,     0,     6,     0,    31,     0,
     0,     3,    33,     3,     5,     3,    12,     3,     3,    63,
     4,    63,    51,    63,    52,    63,    63,    60,    18,    60,
    55,    60,     1,    60,    60,    59,    21,    61,    62,    13,
    65 ]

racc_action_pointer = [
    41,    72,   nil,    49,    45,    51,    41,    40,   nil,     4,
   nil,     9,    46,    79,   nil,   nil,    -4,    26,    64,   nil,
     3,    67,   nil,     0,   nil,    13,     9,    11,    15,    -3,
   nil,    43,   nil,    42,   nil,    16,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    -1,    51,    57,    -2,   nil,    58,   nil,    10,   nil,    64,
    65,    65,    65,    57,   nil,    67,   nil ]

racc_action_default = [
   -38,   -38,    -1,   -38,    -3,   -38,   -38,   -38,    -7,   -38,
   -10,   -38,   -38,   -38,    -2,    -4,   -38,   -38,   -38,   -18,
   -38,   -38,   -15,   -38,    67,   -38,   -35,   -36,   -38,   -38,
    -6,    -9,   -12,   -38,   -17,   -38,   -38,    -5,   -19,   -20,
   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -29,   -30,
   -38,   -38,   -38,   -38,   -14,   -38,   -33,   -37,    -8,   -38,
   -38,   -38,   -38,   -38,   -13,   -38,   -16 ]

racc_goto_table = [
     2,    25,    20,    14,    35,    18,     1,    32,    36,    50,
   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    54,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    56,   nil,   nil,    59,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    62,   nil,   nil,    65 ]

racc_goto_check = [
     2,     5,    10,     2,     9,     8,     1,    11,     5,    12,
   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     5,   nil,   nil,     5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     2,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     6,     0,   nil,   nil,   -15,   nil,   nil,    -4,   -17,
    -9,   -13,   -19,   nil ]

racc_goto_default = [
   nil,   nil,   nil,     3,     5,   nil,     8,     9,   nil,    11,
   nil,   nil,   nil,    28 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 30, :_reduce_1,
  2, 31, :_reduce_2,
  1, 31, :_reduce_none,
  2, 32, :_reduce_none,
  4, 32, :_reduce_none,
  3, 32, :_reduce_none,
  1, 32, :_reduce_none,
  5, 33, :_reduce_none,
  3, 33, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  3, 35, :_reduce_none,
  7, 38, :_reduce_none,
  3, 39, :_reduce_none,
  1, 39, :_reduce_none,
  7, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 37, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  3, 34, :_reduce_none,
  3, 34, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  3, 42, :_reduce_none ]

racc_reduce_n = 38

racc_shift_n = 67

racc_token_table = {
  false => 0,
  :error => 1,
  "" => 2,
  :SEMICOLON => 3,
  :NAME => 4,
  :EQUALS => 5,
  :RETURN => 6,
  :EXPR => 7,
  :CONST => 8,
  :IF => 9,
  :OPEN_PAREN => 10,
  :CLOSE_PAREN => 11,
  :OPEN_CURLY => 12,
  :CLOSE_CURLY => 13,
  :ELSE => 14,
  :INT => 15,
  :NOT_EQUALS => 16,
  :EQUALS_EQUALS => 17,
  :LESS_EQUALS => 18,
  :GREATER_EQUALS => 19,
  :GREATER => 20,
  :LESS => 21,
  :PLUS => 22,
  :MINUS => 23,
  :MULTIPLY => 24,
  :DIVIDE => 25,
  :RIGHT_BIT_SHIFT => 26,
  :LEFT_BIT_SHIFT => 27,
  :NUMBER => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"\"",
  "SEMICOLON",
  "NAME",
  "EQUALS",
  "RETURN",
  "EXPR",
  "CONST",
  "IF",
  "OPEN_PAREN",
  "CLOSE_PAREN",
  "OPEN_CURLY",
  "CLOSE_CURLY",
  "ELSE",
  "INT",
  "NOT_EQUALS",
  "EQUALS_EQUALS",
  "LESS_EQUALS",
  "GREATER_EQUALS",
  "GREATER",
  "LESS",
  "PLUS",
  "MINUS",
  "MULTIPLY",
  "DIVIDE",
  "RIGHT_BIT_SHIFT",
  "LEFT_BIT_SHIFT",
  "NUMBER",
  "$start",
  "start",
  "stmts",
  "stmt",
  "decl",
  "expr",
  "ifblock",
  "modifier",
  "type",
  "if",
  "elsif",
  "else",
  "infix",
  "subexpr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'compiler.y', 2)
  def _reduce_1(val, _values, result)
     return $ast 
    result
  end
.,.,

module_eval(<<'.,.,', 'compiler.y', 3)
  def _reduce_2(val, _values, result)
     stmt.adopt_children(stmts) 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class CompilerLanguage


		parser = CompilerLanguage.new
		count = 0
		scnt  = 0

		puts 'type "ctrl-d" to quit.'

    string_to_parse = ""
		while true do
			# puts
			# print '> '
      instr = gets
      break if !instr
      string_to_parse << instr
			#break if !str# == ?\C-d#/q/i === str
		end

    begin
      val = parser.parse( string_to_parse )
      p $ast
      # print '= ', val, "\n"
    rescue ParseError
      puts $!
    rescue
      puts 'unexpected error ?!'
      raise

	end
