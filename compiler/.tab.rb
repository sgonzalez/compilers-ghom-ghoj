#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

	require './compiler.rex.rb'
	require './reflectivevisitor.rb'

	$ast = AbstractNode.new(:root)

class CompilerLanguage < Racc::Parser

module_eval(<<'...end new_compiler.y/module_eval...', 'new_compiler.y', 36)

	def parse(input)
		scan_str(input)
	end
...end new_compiler.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,    30,     8,   -12,    10,    27,    12,     9,    13,     8,
   -12,    10,    24,    12,     9,    13,     8,   -12,    10,    21,
    12,     9,    13,     8,   -12,    10,    22,    12,    20,    13,
    10,    22,    12,   -18,   -18,    10,    22,    12,    25,    22,
    10,   -19,    12,    10,    22,    12,    33,    32,    10,    19,
    12,    34,   -20,    35,    17,    27,    38,    39,    16,    41,
    42,    43,    14,    45 ]

racc_action_check = [
     0,    23,     0,     0,     0,    18,     0,    43,     0,    43,
    43,    43,    13,    43,     2,    43,     2,     2,     2,    11,
     2,    38,     2,    38,    38,    38,    32,    38,     9,    38,
    32,    12,    32,    22,     9,    12,    24,    12,    14,    21,
    24,    10,    24,    21,    20,    21,    26,    26,    20,     7,
    20,    27,    30,    31,     6,    34,    35,    36,     4,    40,
    41,    42,     1,    44 ]

racc_action_pointer = [
    -4,    62,    10,   nil,    56,   nil,    52,    42,   nil,    25,
    32,    10,    27,     2,    38,   nil,   nil,   nil,     1,   nil,
    40,    35,    24,   -10,    32,   nil,    44,    46,   nil,   nil,
    43,    42,    22,   nil,    51,    43,    55,   nil,    17,   nil,
    45,    45,    48,     3,    49,   nil ]

racc_action_default = [
    -2,   -24,    -2,    -3,   -24,    -5,   -24,   -24,   -11,   -14,
   -15,   -24,   -24,   -24,   -24,    -1,    -4,    -6,   -24,   -13,
   -24,   -24,   -14,   -24,   -24,    46,   -24,    -9,   -23,   -16,
   -17,   -24,   -24,    -8,   -24,   -24,   -24,   -10,    -2,    -7,
   -24,   -21,   -24,    -2,   -24,   -22 ]

racc_goto_table = [
     1,    23,    15,    26,    18,   nil,   nil,   nil,   nil,    28,
    29,   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,    37,
   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,   nil,
   nil,   nil,   nil,    44 ]

racc_goto_check = [
     1,     4,     1,     9,     8,   nil,   nil,   nil,   nil,     4,
     4,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,     9,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,
   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   nil,   nil,   -11,   nil,   nil,   nil,    -3,   -15,
   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     5,     6,     7,   nil,   nil,
    11 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 17, :_reduce_1,
  0, 17, :_reduce_none,
  1, 18, :_reduce_none,
  2, 18, :_reduce_none,
  1, 18, :_reduce_none,
  2, 18, :_reduce_none,
  6, 19, :_reduce_none,
  4, 19, :_reduce_none,
  1, 25, :_reduce_none,
  3, 25, :_reduce_none,
  1, 23, :_reduce_none,
  0, 23, :_reduce_none,
  1, 24, :_reduce_none,
  1, 20, :_reduce_none,
  1, 20, :_reduce_none,
  3, 20, :_reduce_none,
  3, 20, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  3, 26, :_reduce_none,
  7, 21, :_reduce_none,
  11, 21, :_reduce_none,
  3, 22, :_reduce_none ]

racc_reduce_n = 24

racc_shift_n = 46

racc_token_table = {
  false => 0,
  :error => 1,
  ";" => 2,
  "=" => 3,
  :NAME => 4,
  "," => 5,
  :CONST => 6,
  :INT => 7,
  :NUMBER => 8,
  :OP => 9,
  "(" => 10,
  ")" => 11,
  "if" => 12,
  "{" => 13,
  "}" => 14,
  "else" => 15 }

racc_nt_base = 16

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\";\"",
  "\"=\"",
  "NAME",
  "\",\"",
  "CONST",
  "INT",
  "NUMBER",
  "OP",
  "\"(\"",
  "\")\"",
  "\"if\"",
  "\"{\"",
  "\"}\"",
  "\"else\"",
  "$start",
  "stmts",
  "stmt",
  "declar",
  "expr",
  "if",
  "assign",
  "modifier",
  "type",
  "names",
  "subexpr" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'new_compiler.y', 3)
  def _reduce_1(val, _values, result)
    puts val.inspect
    result
  end
.,.,

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

def _reduce_none(val, _values, result)
  val[0]
end

end   # class CompilerLanguage
